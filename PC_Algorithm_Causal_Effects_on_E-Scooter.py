# -*- coding: utf-8 -*-
"""cs520.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CF0yimCQOFBx30nCE8otse13vOMXC678
"""

import pandas as pd
from pgmpy.estimators import PC
from sklearn.preprocessing import StandardScaler
import numpy as np

# Function to preprocess the data
def preprocess_data(data):
    threshold = len(data) * 0.5
    data = data.dropna(thresh=threshold, axis=1)

    # Dropping rows with any missing values
    data = data.dropna()

    # Encoding categorical variables (if any)
    categorical_cols = data.select_dtypes(include=['object', 'category']).columns
    data = pd.get_dummies(data, columns=categorical_cols, drop_first=True)

    # Standardizing the data
    scaler = StandardScaler()
    scaled_data = scaler.fit_transform(data)
    scaled_data = pd.DataFrame(scaled_data, columns=data.columns)

    return scaled_data

# Function to perform causal discovery
def causal_discovery(data):
    # Create an instance of the PC algorithm
    pc = PC(data)

    # Estimate the DAG (Directed Acyclic Graph)
    estimated_graph = pc.estimate(return_type='dag', variant='stable', significance_level=0.05)

    return estimated_graph

data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/output.csv')

preprocessed_data = preprocess_data(data)

# Perform causal discovery
causal_graph = causal_discovery(preprocessed_data)

# Display the edges of the causal graph
print(causal_graph.edges())

print(causal_graph.edges())

import matplotlib.pyplot as plt
import networkx as nx
import pydot
from networkx.drawing.nx_pydot import graphviz_layout

# Create a NetworkX graph from the DAG
G = nx.DiGraph(causal_graph.edges())

# Use Graphviz layout
pos = graphviz_layout(G, prog='dot')  # 'dot' is one of the Graphviz layout engines

# Plot the graph with the Graphviz layout
plt.figure(figsize=(15, 10))
nx.draw(G, pos, with_labels=True, node_color='lightblue', node_size=2000, edge_color='gray', linewidths=2, font_size=10)
plt.title("Causal Graph with Graphviz Layout")
plt.show()

pip install pydot graphviz

import matplotlib.pyplot as plt
import networkx as nx
import pydot
from networkx.drawing.nx_pydot import graphviz_layout

# Assuming 'causal_graph' is the DAG you obtained from the previous step

# Create a NetworkX graph from the DAG
G = nx.DiGraph(causal_graph.edges())

# Use Graphviz layout
pos = graphviz_layout(G, prog='neato')  # 'dot' is one of the Graphviz layout engines

# Plot the graph with the Graphviz layout
plt.figure(figsize=(15, 10))  # Adjust the size as needed
nx.draw(G, pos, with_labels=True, node_color='lightblue', node_size=2000, edge_color='gray', linewidths=2, font_size=10)
plt.title("Causal Graph with Graphviz Layout")
plt.show()

print(causal_graph.edges)

# List of variables of interest
variables_of_interest =  ['attd_usage_future_Strongly agree','attd_usage_future_Disagree']


# Select edges that involve at least one of the variables of interest
selected_edges = [(a, b) for a, b in causal_graph.edges() if a in variables_of_interest or b in variables_of_interest]

print(selected_edges)

import matplotlib.pyplot as plt
import networkx as nx
import pydot
from networkx.drawing.nx_pydot import graphviz_layout


# Create a NetworkX graph from the DAG
G = nx.DiGraph(selected_edges)

# Use Graphviz layout
pos = graphviz_layout(G, prog='dot')  # 'dot' is one of the Graphviz layout engines

# Plot the graph with the Graphviz layout
plt.figure(figsize=(15, 10))  # Adjust the size as needed
nx.draw(G, pos, with_labels=True, node_color='lightblue', node_size=2000, edge_color='gray', linewidths=2, font_size=10)
plt.title("Causal Graph with Graphviz Layout")
plt.show()

data12 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/output.csv')

print(data12)

import pandas as pd
from pgmpy.estimators import PC
from sklearn.preprocessing import StandardScaler
import networkx as nx
from networkx.drawing.nx_pydot import graphviz_layout
import matplotlib.pyplot as plt

# Handle missing values and standardize
data12 = data12.select_dtypes(include=['number'])  # Assuming we are only using numeric data for simplicity
data12 = data12.dropna()
scaler = StandardScaler()
scaled_data = scaler.fit_transform(data)
scaled_data = pd.DataFrame(scaled_data, columns=data.columns)

# Perform causal discovery using the PC algorithm
pc = PC(scaled_data)
causal_graph = pc.estimate(return_type='dag', variant='stable', significance_level=0.05)

# Visualize the causal graph
G = nx.DiGraph(causal_graph.edges())
plt.figure(figsize=(12, 8))
pos = graphviz_layout(G, prog='dot')
nx.draw(G, pos, with_labels=True, node_color='lightblue', node_size=2000, edge_color='gray', linewidths=2, font_size=10)
plt.title("Causal Graph")
plt.show()